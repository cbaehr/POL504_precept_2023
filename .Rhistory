View(summaries_xpath)
summaries_xpath <- page %>%
html_elements(xpath = '//*[@id="content"]/div[2]/div/div[3]/div/div[1]/div[2]/div/section/div/div[2]/div')
summaries_xpath <- page %>%
html_elements(xpath = '//*[@id="content"]/div[2]/div/div[3]/div/div[1]/div[2]/div/section/div/div[2]/div')
View(page)
dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
stringsAsFactors = F)
hist(dat$Year)
hist(dat$Year, xlim = c(2000, 2020))
hist(dat$Year, xlim = c(2000, 2023))
hist(dat$Year, xlim = c(2000, 2024))
help(hist)
hist(dat$Year, breaks = 1, xlim = c(2000, 2023))
hist(dat$Year, breaks = 23, xlim = c(2000, 2023))
dat <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
View(dat)
View(dat)
table(dat$country)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
table(elections$cnty)
View(elections)
View(elections)
elections <- elections[which(elections$legid==1),]
names(elections)
paste0("p", 1:497, "s")
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")])
elections$nseats
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
hist(elections$nseats)
elections <- elections[which(elections$nseats==1), ]
elections$closeness <- (elections$p1v - elections$p2v) / elections$dtv
hist(elections$closeness)
table(elections$closeness)
hist(elections$closeness)
elections$topvotes <- apply(elections[, paste0("p", 1:497, "s")], 1, FUN = function(x) max(x, na.rm=T))
n <- length(1:497)
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "s")], 1, FUN = function(x) sort(x, partial=n-1)[n-1])
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "s")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
warnings()
View(elections[elections$secondvotes==-Inf, ])
row.names(elections[elections$secondvotes==-Inf, ])
rownames(elections[elections$secondvotes==-Inf, ])
rownames(elections) <- 1:nrow(elections)
View(elections[elections$secondvotes==-Inf, ])
elections[5954,]
class(elections)
elections[5955,]
elections[1,]
elections["1",]
elections <- data.frame(elections)
elections[5955,]
dat <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
elections <- elections[which(elections$nseats==1), ]
elections$topvotes <- apply(elections[, paste0("p", 1:497, "s")], 1, FUN = function(x) max(x, na.rm=T))
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "s")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
elections$closeness <- (elections$topvotes - elections$secondvotes) / elections$dtv
hist(elections$closeness)
summary(elections$closeness)
elections$closeness[elections$closeness==Inf] <- NA
summary(elections$closeness)
hist(elections$closeness)
View(dat)
View(dat)
names(elections)
View(elections[c("cnty", "year", "dtv", "topvotes", "secondvotes", "closeness")])
dat <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
elections <- elections[which(elections$nseats==1), ]
elections$topvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x, na.rm=T))
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
elections$closeness <- (elections$topvotes - elections$secondvotes) / elections$dtv
elections$closeness[elections$closeness==Inf] <- NA
View(elections[c("cnty", "year", "dtv", "topvotes", "secondvotes", "closeness")])
hist(elections$closeness)
summary(elections$closeness)
View(dat)
gdp <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
rm(dat)
View(gdp)
elections <- elections[c("cnty", "year", "dtv", "topvotes", "secondvotes", "closeness")]
View(gdp)
View(elections)
gdp$iso
unique(gdp$iso)
install.packages("countrycode")
library
library(countrycode)
help("countrycode")
countrycode::countrycode(elections$cnty, origin = "name", destination = "iso3c")
elections$iso <- countrycode::countrycode(elections$cnty, origin = "name", destination = "iso3c")
elections$iso <- countrycode::countrycode(elections$cnty, origin = "country.name", destination = "iso3c")
View(elections)
sum(is.na(elections$iso))
table(elections$iso)
table(gdp$iso)
View(elections)
View(gdp)
names(gdp)
names(elections)
dat <- merge(elections, gdp, by=c("iso", "year"))
gdp <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
elections <- elections[which(elections$nseats==1), ]
elections$topvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x, na.rm=T))
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
elections$closeness <- (elections$topvotes - elections$secondvotes) / elections$dtv
elections$closeness[elections$closeness==Inf] <- NA
View(elections)
elections <- elections[c("cnty", "year", "district", "dtv", "topvotes", "secondvotes", "closeness")]
elections$iso <- countrycode::countrycode(elections$cnty, origin = "country.name", destination = "iso3c")
View(elections)
View(gdp)
grep("-", elections$district, value = T)
albania <- elections[which(elections$cnty=="Albania"), ]
albania$district <- sapply(albania$district, FUN = function(x) strsplit(x, "-")[2])
View(albania)
albania <- elections[which(elections$cnty=="Albania"), ]
albania$district[1]
strsplit(albania$district[1], "-")
albania$district <- sapply(albania$district, FUN = function(x) strsplit(x, "-")[[1]][2])
View(albania)
elections$district[which(elections$cnty=="Albania")] <- sapply(elections$district[which(elections$cnty=="Albania")],
FUN = function(x) strsplit(x, "-")[[1]][2])
View(elections)
elections$region <- elections$district
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
View(dat)
View(dat)
View(gdp)
View(elections[elections$cnty=="China",])
View(elections[elections$cnty=="Colombia",])
table(elections$iso)
table(elections$district[elections$cnty=="France"])
unique(elections$district[elections$cnty=="France"])
sort(unique(elections$district[elections$cnty=="France"]))
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
View(elections)
elections$region <- tolower(elections$district)
gdp$region <- tolower(gdp$region)
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
gdp <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
elections <- elections[which(elections$nseats==1), ]
elections$topvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x, na.rm=T))
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
elections$closeness <- (elections$topvotes - elections$secondvotes) / elections$dtv
elections$closeness[elections$closeness==Inf] <- NA
View(elections[c("cnty", "year", "district", "dtv", "topvotes", "secondvotes", "closeness")])
elections <- elections[c("cnty", "year", "district", "dtv", "topvotes", "secondvotes", "closeness")]
elections$iso <- countrycode::countrycode(elections$cnty, origin = "country.name", destination = "iso3c")
elections$district[which(elections$cnty=="Albania")] <- sapply(elections$district[which(elections$cnty=="Albania")],
FUN = function(x) strsplit(x, "-")[[1]][2])
elections$region <- tolower(elections$district)
gdp$region <- tolower(gdp$region)
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
View(gdp)
View(elections)
gdp$region <- gsub("ë", "e", gdp$region)
gdp$region <- gsub("ç", "c", gdp$region)
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
elections$region <- trimws(tolower(elections$district))
gdp$region <- trimws(tolower(gdp$region))
gdp$region <- gsub("ë", "e", gdp$region)
gdp$region <- gsub("ç", "c", gdp$region)
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
View(dat)
library("sf")
install.packages("sf")
aus <- sf::st_read("/Users/christianbaehr/Downloads/gadm41_AUS_2.json")
unique(aus$NAME_1)
unique(elections$district[elections$cnty=="Australia"])
unique(aus$NAME_1)
unique(gdp$region[gdp$country=="Australia"])
View(aus)
unique(elections$district[elections$cnty=="Australia"])
unique(aus$NAME_2)
unique(elections$district[elections$cnty=="Australia"])
sort(unique(elections$district[elections$cnty=="Australia"]))
sort(unique(elections$district[elections$cnty=="Australia"]))
sort(unique(aus$NAME_2))
aus <- data.frame(aus[,c("NAME_1", "NAME_2")])
aus <- aus[, names(aus)!="geometry"]
unique(elections$cnty)
library(readxl)
dat <- read_xlsx("/Users/christianbaehr/Downloads/Africa_1997-2023_Aug04-2.xlsx")
warnings()
unique(dat$EVENT_TYPE)
unique(dat$SUB_EVENT_TYPE)
unique(elections$cnty)
dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
stringsAsFactors = F)
hist(dat$Year, breaks = 23, xlim = c(2000, 2023))
library(ggplot2)
View(dat)
p <- ggplot(data = dat, aes(x=Year, group=Journal, fill=Journal)) +
geom_density(position = "fill")
p
p <- ggplot(data = dat, aes(x=Year, group=Journal, fill=Journal)) +
geom_density()
p
help("geom_density")
p <- ggplot(data = dat, aes(x=Year, group=Journal, fill=Journal)) +
geom_density(position = "fill", stat = "count")
p
p <- ggplot(data = dat, aes(x=Year, group=Journal, fill=Journal)) +
geom_density(position = "stack", stat = "count")
p
p <- ggplot(data = dat, aes(x=Year, stat(count), fill=Journal)) +
geom_density(position = "stack")
p
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack")
p
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack") +
theme_ipsum()
install.packages("hrbrthemes")
library(hrbrthemes)
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack") +
theme_ipsum()
p
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack")
p
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image.png",
device = "png")
gdp <- read.csv(file = "/Users/christianbaehr/Dropbox/satellite_paper/application/DOSE_v1.csv",
stringsAsFactors = F)
elections <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/application/GlobalElections_district_elections.csv",
stringsAsFactors = F)
elections <- elections[which(elections$legid==1),]
elections$nseats <- rowSums(elections[, paste0("p", 1:497, "s")], na.rm = T)
elections <- elections[which(elections$nseats==1), ]
elections$topvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x, na.rm=T))
elections$secondvotes <- apply(elections[, paste0("p", 1:497, "v")], 1, FUN = function(x) max(x[x!=max(x, na.rm=T)], na.rm=T))
elections$closeness <- (elections$topvotes - elections$secondvotes) / elections$dtv
elections$closeness[elections$closeness==Inf] <- NA
View(elections[c("cnty", "year", "district", "dtv", "topvotes", "secondvotes", "closeness")])
elections <- elections[c("cnty", "year", "district", "dtv", "topvotes", "secondvotes", "closeness")]
elections$iso <- countrycode::countrycode(elections$cnty, origin = "country.name", destination = "iso3c")
elections$district[which(elections$cnty=="Albania")] <- sapply(elections$district[which(elections$cnty=="Albania")],
FUN = function(x) strsplit(x, "-")[[1]][2])
elections$region <- trimws(tolower(elections$district))
gdp$region <- trimws(tolower(gdp$region))
gdp$region <- gsub("ë", "e", gdp$region)
gdp$region <- gsub("ç", "c", gdp$region)
dat <- merge(elections, gdp, by=c("iso", "year", "region"))
aus <- sf::st_read("/Users/christianbaehr/Downloads/gadm41_AUS_2.json")
aus <- data.frame(aus[,c("NAME_1", "NAME_2")])
aus <- aus[, names(aus)!="geometry"]
library(readxl)
dat <- read_xlsx("/Users/christianbaehr/Downloads/Africa_1997-2023_Aug04-2.xlsx")
################################################################################
ndvi <- read.csv("/Users/christianbaehr/Downloads/64e76de13bdd3f6d15366302/64e76de13bdd3f6d15366302_results.csv",
stringsAsFactors = F)
ndvi <- ndvi[, c("gqid", grep("ltdr",names(ndvi),value=T))]
library(tidyverse)
ndvi2 <- ndvi %>%
pivot_longer(cols = c(grep("ltdr",names(ndvi),value=T)),
names_to = "Variable",
values_to = "Value")
ndvi2$Variable <- gsub("ltdr_avhrr_ndvi_v5_monthly.|.mean", "", ndvi2$Variable)
ndvi2$year <- substr(ndvi2$Variable, 1, 4)
ndvi2$month <- substr(ndvi2$Variable, 5, 6)
ndvi2 <- ndvi2[which(ndvi2$year>=2010), ]
library(sf)
bounds <- st_read("/Users/christianbaehr/Downloads/64e76de13bdd3f6d15366302/KHM_ADM3.geojson")
events <- read.csv("/Users/christianbaehr/Downloads/Asia-Pacific_2018-2023_Aug04.csv", stringsAsFactors = F)
events <- events[which(events$COUNTRY=="Cambodia"), ]
events <- st_as_sf(x=events, coords=c("LONGITUDE", "LATITUDE"), crs=st_crs(4326))
test <- st_intersection(events, bounds)
test$month <- substr(test$EVENT_DATE, 4, nchar(test$EVENT_DATE))
test$month <- substr(test$month, 1, (nchar(test$month)-5))
test$monthnum <- match(test$month, month.name)
test2 <- aggregate(test$EVENT_ID_CNTY, by=list(test$gqid, test$YEAR, test$monthnum), FUN=function(x) length(x))
names(test2) <- c("gqid", "year", "month", "events")
ndvi3 <- merge(ndvi2, test2, by=c("gqid", "year", "month"), all.x=T)
ndvi3$events[is.na(ndvi3$events)] <- 0
lagg <- function(x, years) {
y <- c(NA, x[1:(length(x)-1)])
# 2020 value for previous country carries over into 1970 for current country.
# replace with NA
y[which(years==min(years))] <- NA
return(y)
}
ndvi3$yearmon <- as.numeric(paste0(ndvi3$year, ndvi3$month))
ndvi3 <- ndvi3[order(ndvi3$gqid, ndvi3$yearmon),]
ndvi3$events_l1 <- lagg(ndvi3$events, years=ndvi3$yearmon)
View(ndvi3[which(ndvi3$events>10), ])
summary(lm(Value ~ events, data = ndvi3))
summary(lm(Value ~ events + factor(year), data = ndvi3))
summary(lm(Value ~ events + factor(yearmon), data = ndvi3))
library(raster)
library(rgdal)
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
sum(ras==0)
cellStats(ras)
help("cellStats")
cellStats(ras, stat="mean")
ras <- (ras==0)
hist(ras)
cellStats(ras, stat="mean")
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
#ras[ras==0] <- NA
hist(ras, xlab = "DMSP Nighttime Light Emissions", main = " ", col = "lightgoldenrod")
hist(ras, xlab = "DMSP Nighttime Light Emissions", main = " ", col = "lightgoldenrod", bins=100)
help(hist)
hist(ras, xlab = "DMSP Nighttime Light Emissions", main = " ", col = "lightgoldenrod", breaks=100)
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
ras[ras==0] <- NA
hist(ras, xlab = "DMSP Nighttime Light Emissions", main = " ", col = "lightgoldenrod")
png(file = "/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_hist.png", width = 6, height = 4, res=300, units="in")
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
library(raster)
library(rgdal)
png(file = "/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_hist.png", width = 6, height = 4, res=300, units="in")
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
ras[ras==0] <- NA
hist(ras, xlab = "DMSP Nighttime Light Emissions", main = " ", col = "lightgoldenrod")
dev.off()
png(file = "/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_hist.png", width = 6, height = 4, res=300, units="in")
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
ras[ras==0] <- NA
hist(ras, xlab = "DMSP Nighttime Light Emissions (Zeroes Omitted)", main = " ", col = "lightgoldenrod")
dev.off()
png(file = "/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_hist.png", width = 6, height = 4, res=300, units="in")
ras <- raster("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/ntl_2005.tif")
ras[ras==0] <- NA
hist(ras, xlab = "DMSP Nighttime Light Emissions (Zeros Omitted)", main = " ", col = "lightgoldenrod")
dev.off()
# dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
#                 stringsAsFactors = F)
dat <- readxl::read_xlsx("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.xlsx")
dat <- data.frame(dat)
View(dat)
dat <- readxl::read_xlsx("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.xlsx")
dat <- data.frame(dat)
dat$Measure[which(dat$Measure=="Locality")] <- "Auxiliary"
dat$Purpose <- ifelse(dat$Dependent.Variable=="Y", "Dependent",
ifelse(dat$Treatment.Variable=="Y", "Treatment",
ifelse(dat$Control.Variable=="Y", "Control",
ifelse(dat$Auxiliary=="Y", "Auxiliary", "NA"))))
library(ggplot2)
library(hrbrthemes)
library(RColorBrewer)
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack")
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image.png",
device = "png")
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=purpose)) +
geom_density(position = "stack") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
labs(y="Count") +
scale_fill_brewer(palette="Set2")
p
# dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
#                 stringsAsFactors = F)
dat <- readxl::read_xlsx("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.xlsx")
dat <- data.frame(dat)
dat$Measure[which(dat$Measure=="Locality")] <- "Auxiliary"
dat$Purpose <- ifelse(dat$Dependent.Variable=="Y", "Dependent",
ifelse(dat$Treatment.Variable=="Y", "Treatment",
ifelse(dat$Control.Variable=="Y", "Control",
ifelse(dat$Auxiliary=="Y", "Auxiliary", "NA"))))
#hist(dat$Year, breaks = 23, xlim = c(2000, 2023))
library(ggplot2)
library(hrbrthemes)
library(RColorBrewer)
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Journal)) +
geom_density(position = "stack")
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image.png",
device = "png")
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Purpose)) +
geom_density(position = "stack") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
labs(y="Count") +
scale_fill_brewer(palette="Set2")
p
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image_purpose.png",
device = "png", width=7, height=4, units = "in")
# p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Subfield)) +
#   geom_density(position = "stack")
# p
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Measure)) +
geom_density(position = "stack") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
labs(y="Count") +
scale_fill_brewer(palette="Set3")
p
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image_measure.png",
device = "png", width=7, height=4, units = "in")
# dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
#                 stringsAsFactors = F)
dat <- readxl::read_xlsx("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.xlsx")
dat <- data.frame(dat)
which(dat$Measure=="Locality")
View(dat)
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# dat <- read.csv("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.csv",
#                 stringsAsFactors = F)
dat <- readxl::read_xlsx("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers.xlsx")
dat <- data.frame(dat)
dat$Measure[which(dat$Measure=="Locality")] <- "Auxiliary"
dat$Purpose <- ifelse(dat$Dependent.Variable=="Y", "Dependent",
ifelse(dat$Treatment.Variable=="Y", "Treatment",
ifelse(dat$Control.Variable=="Y", "Control",
ifelse(dat$Auxiliary=="Y", "Auxiliary", "NA"))))
#hist(dat$Year, breaks = 23, xlim = c(2000, 2023))
library(ggplot2)
library(hrbrthemes)
library(RColorBrewer)
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Purpose)) +
geom_density(position = "stack") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
labs(y="Count") +
scale_fill_manual(values=cbPalette)
p
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image_purpose.png",
device = "png", width=7, height=4, units = "in")
# p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Subfield)) +
#   geom_density(position = "stack")
# p
p <- ggplot(data = dat, aes(x=Year, after_stat(count), fill=Measure)) +
geom_density(position = "stack") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
labs(y="Count") +
scale_fill_manual(values=cbPalette)
p
ggsave("/Users/christianbaehr/Dropbox/satellite_paper/descriptive/satellite_papers_image_measure.png",
device = "png", width=7, height=4, units = "in")
install.packages("redist")
library(redist)
data("fl250")
class(data)
class(fl250)
library(sf)
write_sf(fl250, "/Users/christianbaehr/Desktop/fl250.geojson")
rm(fl250)
library(sf)
test=st_read("/Users/christianbaehr/Downloads/dataverse_files-11/amos_mcdonald_watkins/amos_mcdonald_watkins.shp")
summary(test$precinctid)
head(preprocessed_documents$choices)
head(preprocessed_documents$choices)
## Introduction to R Programming
## Date: September 21, 2023
## Author: Christian Baehr
## Lab adapted from: Elisa Wirsching, Lucia Motolinia, Pedro L. Rodriguez, Kevin
## Munger, Patrick Chester and Leslie Huang.
## Topics:
## - dfm and tf idf
## - examining your corpus
## - regular expressions
## - preText
################################################# Precept 2: Processing Text in R
## 1.1) working directory
## point this to directory containing precept files
setwd("/Users/christianbaehr/Documents/GitHub/POL504_precept_2023/")
## 1.2) package management
## only do these once
#install.packages("pacman")
#devtools::install_github("matthewjdenny/preText")
## use pacman instead of loading individual libraries
pacman::p_load(ggplot2,
preText,
quanteda.textplots,
quanteda.textstats,
readtext)
## 1.3) load movie reviews into a corpus
## load csv with text in "review" column
reviews <- readtext("data/reviews.csv", text_field = "review") |>
corpus()
help(quanteda::corpus)
help(corpus)
